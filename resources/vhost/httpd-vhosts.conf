<VirtualHost _default_:80>
DocumentRoot "${SRVROOT}/htdocs"
</VirtualHost>

Define SIGASRVROOT "C:/Apache24/misiga.local"
Define SIGADOCROOT "${SIGASRVROOT}/htdocs"
Define SIGALOGS "${SIGASRVROOT}/logs"
Define SIGASRVNAME sigademo.redabogacia.org.local

<VirtualHost sigademo.redabogacia.org.local:443>
	ServerName "${SIGASRVNAME}"
	DocumentRoot "${SIGADOCROOT}"
	
	<Directory "${SIGADOCROOT}">
		Require all granted
	</Directory>
	
	ErrorLog "${SIGALOGS}/${SIGASRVNAME}-ssl-error.log"
    CustomLog "${SIGALOGS}/${SIGASRVNAME}-ssl-access.log" common
	
	SSLEngine on

	SSLCertificateFile "${SIGASRVROOT}/certs/sigademo/sigademo.redabogacia.org.crt"
	SSLCertificateKeyFile "${SIGASRVROOT}/certs/sigademo/sigademo.redabogacia.org.key"
	SSLCACertificateFile "${SIGASRVROOT}/certs/sigademo/cerraiz.pem"
	SSLVerifyDepth 2
	SSLVerifyClient require	
	SSLOptions +ExportCertData
	
	
	# Proxy con mod_weblogic
	<Location /SIGA>
		SetHandler weblogic-handler
		SSLVerifyClient require	
	</Location>
	
	ProxyPass /ang/ http://localhost:4200/ang/
	ProxyPassReverse /ang/ http://localhost:4200/ang/
		
</VirtualHost>  
























#Pruebas


#Proxys inversos



#Para apuntar al servidor de desarrollo de angular
	#ProxyPass /ang/ http://localhost:8081/
	#ProxyPassReverse /ang/ http://localhost:8081/
	
	#ProxyPass /SIGA/ http://vmdxdarsap028.cloud.es.deloitte.com:7001/SIGA/
	#ProxyPassReverse /SIGA/ http://vmdxdarsap028.cloud.es.deloitte.com:7001/SIGA/
	
	#ProxyPass / http://google.com/
	#ProxyPassReverse / http://google.com/
	
	#ProxyPass / http://google.com/
	#ProxyPassReverse / http://google.com/
	
	#ProxyPass /SIGA/ http://localhost:7001/SIGA/
	#ProxyPassReverse /SIGA/ http://localhost:7001/SIGA/


	#ProxyPass /SIGA/ http://vmdxdarsap028.cloud.es.deloitte.com:7001/SIGA/
	#ProxyPassReverse /SIGA/ http://vmdxdarsap028.cloud.es.deloitte.com:7001/SIGA/
#<VirtualHost *:8081>
#	
#	ProxyPass / http://localhost:4200/
#	ProxyPassReverse / http://localhost:4200/
#	
#</VirtualHost>

#Config CORS con apache
	#Header set Access-Control-Allow-Origin "*"
	#RequestHeader set WL-PROXY-CLIENT-CERT ""
	#RequestHeader set WL-PROXY-CLIENT-CERT "%{SSL_CLIENT_CERT}s"
	

# Configuracion SSL para Proxy Inverso
	#SSLProxyEngine on
	#SSLProxyMachineCertificateFile "${SIGASRVROOT}/certs/sigademo/combined.jks"
	#SSLProxyMachineCertificateChainFile "${SIGASRVROOT}/certs/sigademo/cerraiz.pem"
	#SSLProxyCACertificateFile "${SIGASRVROOT}/certs/sigademo/cerraiz.pem"
	#SSLProxyVerify none 
	#SSLProxyCheckPeerCN off
	#SSLProxyCheckPeerName off
	#SSLProxyCheckPeerExpire off
	#SSLProxyVerifyDepth 2
	#SSLProxyVerify require
	#SSLOptions +ExportCertData +StdEnvVars
	
# Para enviar las cabeceras del certificado de cliente x509 a los aplicativos a traves de proxy	
	#RequestHeader set SSL_CLIENT_S_DN    ""
    #RequestHeader set SSL_CLIENT_I_DN    ""
    #RequestHeader set SSL_SERVER_S_DN_OU ""
    #RequestHeader set SSL_CLIENT_VERIFY  ""
    #RequestHeader set SSL_CLIENT_V_START  ""
    #RequestHeader set SSL_CLIENT_V_END  ""
    #RequestHeader set SSL_CLIENT_M_VERSION  ""
    #RequestHeader set SSL_CLIENT_M_SERIAL  ""
    #RequestHeader set SSL_CLIENT_CERT  ""
    #RequestHeader set SSL_CLIENT_VERIFY  ""
    #RequestHeader set SSL_SERVER_M_SERIAL  ""
    #RequestHeader set SSL_SERVER_M_VERSION  ""
    #RequestHeader set SSL_SERVER_I_DN  ""
    #RequestHeader set SSL_SERVER_CERT  ""
    #
	#RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
    #RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
    #RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
    #RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
    #RequestHeader set SSL_CLIENT_V_START "%{SSL_CLIENT_V_START}s"
    #RequestHeader set SSL_CLIENT_V_END "%{SSL_CLIENT_V_END}s"
    #RequestHeader set SSL_CLIENT_M_VERSION "%{SSL_CLIENT_M_VERSION}s"
    #RequestHeader set SSL_CLIENT_M_SERIAL "%{SSL_CLIENT_M_SERIAL}s"
    #RequestHeader set SSL_CLIENT_CERT "%{SSL_CLIENT_CERT}s"
    #RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
    #RequestHeader set SSL_SERVER_M_VERSION "%{SSL_SERVER_M_VERSION}s"
    #RequestHeader set SSL_SERVER_I_DN "%{SSL_SERVER_I_DN}s"
    #RequestHeader set SSL_SERVER_CERT "%{SSL_SERVER_CERT}s"
	
	
#<VirtualHost siga.local:80>
#    ServerName siga.local
#	
#	ProxyPass /SIGA/ http://localhost:7001/SIGA/
#	ProxyPassReverse /SIGA/ http://localhost:7001/SIGA/
#	
#	ProxyPass / http://localhost:4200/
#	ProxyPassReverse / http://localhost:4200/
#	
#</VirtualHost>